{"version":3,"file":"component---src-templates-blog-post-js-016a77410a056c7e5425.js","mappings":"+JAAA,IAKaA,EAAY,SAACC,GACxB,MAHI,4BAGeA,I,uDCkDrB,IA7CY,WAAO,IAAD,IACVC,GAAOC,EAAAA,EAAAA,gBAAe,cAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,6BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,uBAUCZ,aAAA,EAAAA,EAAQa,OACP,qBAAGT,UAAU,qBAAb,cACa,+CADb,+BACwE,IACtE,qBAAGU,KAAK,uBAAR,qCAFF,0F,2FCuCR,UA5EyB,SAAC,GAAwB,IAAD,EAArBhB,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SAC1BC,EAAOlB,EAAKmB,eACZC,GAAY,UAAApB,EAAKG,KAAKC,oBAAV,eAAwBiB,QAAxB,QACVC,EAAmBtB,EAAnBsB,SAAUC,EAASvB,EAATuB,KAEZC,EAAQ,kBACZ,0BACEd,KAAKZ,EAAAA,EAAAA,GAAU,kCACfa,MAAM,OACNc,YAAY,IACZC,UAAU,KACVpB,UAAU,kBAId,OACE,gBAAC,IAAD,CAAQW,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKS,YAAYN,MACxBO,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,2BACEvB,UAAU,YACVwB,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,WAAWC,MAAO,CAAEC,SAAU,sBACxChB,EAAKS,YAAYN,OAEpB,yBAAIH,EAAKS,YAAYQ,OAEvB,gBAACX,EAAD,MACA,2BACEY,wBAAyB,CAAEC,OAAQnB,EAAKoB,MACxCN,SAAS,gBAEX,2BACA,8BACE,gBAAC,IAAD,MACA,gBAACR,EAAD,QAGJ,uBAAKlB,UAAU,kFACb,sBACEA,UAAU,OACV2B,MAAO,CACLM,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,WAAW,SACXC,UAAU,OACVC,QAAS,EACTC,IAAK,SAGP,sBAAIvC,UAAU,OACXgB,GACC,gBAAC,EAAAwB,KAAD,CAAMC,GAAIzB,EAAS0B,OAAOC,KAAMC,IAAI,QAApC,KACK5B,EAASK,YAAYN,QAI9B,sBAAIf,UAAU,OACXiB,GACC,gBAAC,EAAAuB,KAAD,CAAMC,GAAIxB,EAAKyB,OAAOC,KAAMC,IAAI,QAC7B3B,EAAKI,YAAYN,MADpB,Y","sources":["webpack://gatsby-starter-blog/./src/lib/selfUrl.ts","webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["const DOMAIN =\n  process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:8000\"\n    : \"https://note89.github.io/\"\n\nexport const toSelfUrl = (s: string) => {\n  return `${DOMAIN}${s}`\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.jpeg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p className=\"text-md font-sans\">\n          My name is <strong>Nils Eriksson</strong>. I'm a software educator at{\" \"}\n          <a href=\"https://mirdin.com/\">Mirdin | The Code Quality Company</a>. I\n          enjoy thinking deeply about software, this blog is a collection of my\n          thoughts.\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { toSelfUrl } from \"../lib/selfUrl\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  const Frame = () => (\n    <iframe\n      src={toSelfUrl(\"/next-course-iframe/?mode=base\")}\n      width=\"100%\"\n      frameborder=\"0\"\n      scrolling=\"no\"\n      className=\"h-80 sm:h-56\"\n    />\n  )\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\" style={{ fontSize: \"var(--fontSize-8)\" }}>\n            {post.frontmatter.title}\n          </h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <Frame />\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n          <Frame />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav bg-yellow-500 p-4 border border-solid border-yellow-400 border-4\">\n        <ul\n          className=\"bold\"\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            alignItems: `center`,\n            listStyle: `none`,\n            padding: 0,\n            gap: \"1rem\",\n          }}\n        >\n          <li className=\"m-0\">\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li className=\"m-0\">\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["toSelfUrl","s","data","useStaticQuery","author","site","siteMetadata","social","className","S","layout","formats","src","width","height","quality","alt","name","href","location","post","markdownRemark","siteTitle","title","previous","next","Frame","frameborder","scrolling","frontmatter","description","excerpt","itemScope","itemType","itemProp","style","fontSize","date","dangerouslySetInnerHTML","__html","html","display","flexWrap","justifyContent","alignItems","listStyle","padding","gap","Link","to","fields","slug","rel"],"sourceRoot":""}